# This file generates the GitHub Actions matrix.
# For simple board + shield combinations, add them to the top level board and
# shield arrays, for more control, add individual board + shield combinations
# to the `include` property. You can also use the `cmake-args` property to
# pass flags to the build command, `snippet` to add a Zephyr snippet, and
# `artifact-name` to assign a name to distinguish build outputs from each other:
#
# board: [ "nice_nano_v2" ]
# shield: [ "corne_left", "corne_right" ]
# include:
#   - board: bdn9_rev2
#   - board: nice_nano_v2
#     shield: reviung41
#   - board: nice_nano_v2
#     shield: corne_left
#     snippet: studio-rpc-usb-uart
#     cmake-args: -DCONFIG_ZMK_STUDIO=y
#     artifact-name: corne_left_with_studio
#
---
#include:
 # - board: nice_nano_v2
  #  shield: corne_left
  
  #- board: nice_nano_v2
   # shield: corne_right

name: Build ZMK firmware

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_central:
    name: Build Chocofi Left (Central)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: zmkfirmware/zmk@main

      - name: Build (Central / Left)
        run: west build -s zmk/app -b nice_nano_v2 -- -DSHIELD=chocofi -DCONFIG_ZMK_SPLIT_BLE_ROLE_CENTRAL=y

  build_peripheral:
    name: Build Chocofi Right (Peripheral)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: zmkfirmware/zmk@main

      - name: Build (Peripheral / Right)
        run: west build -s zmk/app -b nice_nano_v2 -- -DSHIELD=chocofi -DCONFIG_ZMK_SPLIT_BLE_ROLE_PERIPHERAL=y

