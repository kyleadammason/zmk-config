#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    combos {
        compatible = "zmk,combos";

        SettingLayer {
            bindings = <&mo 3>;
            key-positions = <32 33>;
        };

        Esc_combo {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
        };

        Tab_combo {
            bindings = <&kp TAB>;
            key-positions = <21 22>;
        };

        Bspace_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        Enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <27 28>;
        };

        LC_combo {
            bindings = <&mkp LCLK>;
            key-positions = <13 14>;
        };

        RC_combo {
            bindings = <&mkp RCLK>;
            key-positions = <3 4>;
        };

        capsword_combo {
            bindings = <&caps_word>;
            key-positions = <4 5>;
            layers = <0>;
        };

        Nav_Previous_Tab_Combo {
            bindings = <&kp LC(LS(TAB))>;
            key-positions = <13 7>;
            layers = <4>;
        };

        Nav_Next_Tab_Combo {
            bindings = <&kp LC(TAB)>;
            key-positions = <13 17>;
            layers = <4>;
        };

        Nav_Browser_Back_Combo {
            bindings = <&kp LA(LEFT_ARROW)>;
            key-positions = <13 16>;
            layers = <4>;
        };

        Nav_Browser_Fwd_Combo {
            bindings = <&kp LA(RIGHT)>;
            key-positions = <13 18>;
            layers = <4>;
        };

        Nav_Browser_CloseTab_Combo {
            bindings = <&kp LC(W)>;
            key-positions = <13 8>;
            layers = <4>;
        };

        Nav_Browser_NewTab_Combo {
            bindings = <&kp LC(T)>;
            key-positions = <13 6>;
            layers = <4>;
        };

        Nav_Window_SnapUp-Combo {
            bindings = <&kp LG(LA(UP_ARROW))>;
            key-positions = <12 7>;
            layers = <4>;
        };

        Nav_Window_SnapDown-Combo {
            bindings = <&kp LG(LA(DOWN_ARROW))>;
            key-positions = <12 17>;
            layers = <4>;
        };

        Nav_Window_SnapLeft-Combo {
            bindings = <&kp LG(LEFT)>;
            key-positions = <12 16>;
            layers = <4>;
        };

        Nav_Window_SnapRidht-Combo {
            bindings = <&kp LG(RIGHT)>;
            key-positions = <12 18>;
            layers = <4>;
        };

        Nav_Window_Min-Combo {
            bindings = <&kp LG(DOWN_ARROW)>;
            key-positions = <12 8>;
            layers = <4>;
        };

        Nav_Window_Maxim-Combo {
            bindings = <&kp LG(UP_ARROW)>;
            key-positions = <12 6>;
            layers = <4>;
        };

        Nav_Screen_MoveLeft_Combo {
            bindings = <&kp LG(LS(LEFT))>;
            key-positions = <11 16>;
            layers = <4>;
        };

        Nav_Screen_MoveRight_Combo {
            bindings = <&kp LG(LS(RIGHT))>;
            key-positions = <11 18>;
            layers = <4>;
        };

        Nav_Screen_Close_Combo {
            bindings = <&kp LA(F4)>;
            key-positions = <11 8>;
            layers = <4>;
        };

        Nav_Screen_New_Combo {
            bindings = <&kp LC(N)>;
            key-positions = <11 6>;
            layers = <4>;
        };

        Nav_Desktop_Left_Combo {
            bindings = <&kp LC(LG(LEFT))>;
            key-positions = <10 16>;
            layers = <4>;
        };

        Nav_Desktop_Right_Combo {
            bindings = <&kp LC(LG(RIGHT))>;
            key-positions = <10 16>;
            layers = <4>;
        };

        Nav_Desktop_New_Combo {
            bindings = <&kp LC(LG(D))>;
            key-positions = <10 6>;
            layers = <4>;
        };

        Nav_Desktop_Close_Combo {
            bindings = <&kp LC(LG(F4))>;
            key-positions = <10 8>;
            layers = <4>;
        };
    };

    behaviors {
        behavior_mod_morph_up: mod_morph_up {
            compatible = "zmk,behavior-mod-morph";
            label = "UP_MORPH";
            #binding-cells = <0>;
            bindings = <
                &kp UP,
                &kp LC(LS(TAB)),        // When Shift is held
                &kp LA(LG(UP_ARROW))         // When GUI is held
                //&kp        // When Ctrl is held
                //&kp SHFT_UP      // When Alt is held
            >;

            mods = <(MOD_RSFT | MOD_RGUI)>;
        };

        Nav_Previous_Tab_MM: Nav_Previous_Tab_MM {
            compatible = "zmk,behavior-mod-morph";
            label = "NAV_PREVIOUS_TAB_MM";
            bindings = <&kp UP_ARROW>, <&kp LC(LS(TAB))>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        Nav_Next_Tab_MM: Nav_Next_Tab_MM {
            compatible = "zmk,behavior-mod-morph";
            label = "NAV_NEXT_TAB_MM";
            bindings = <&kp DOWN_ARROW>, <&kp LC(TAB)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        Nav_Browser_Back_MM: Nav_Browser_Back_MM {
            compatible = "zmk,behavior-mod-morph";
            label = "NAV_BROWSER_BACK_MM";
            bindings = <&kp LEFT_ARROW>, <&kp LA(LEFT_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        Nav_Browser_Fwd_MM: Nav_Browser_Fwd_MM {
            compatible = "zmk,behavior-mod-morph";
            label = "NAV_BROWSER_FWD_MM";
            bindings = <&kp RIGHT_ARROW>, <&kp LA(RIGHT_ARROW)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        Nav_Browser_CloseTab_MM: Nav_Browser_CloseTab_MM {
            compatible = "zmk,behavior-mod-morph";
            label = "NAV_BROWSER_CLOSETAB_MM";
            bindings = <&kp END>, <&kp LC(W)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        Nav_Browser_NewTab_MM: Nav_Browser_NewTab_MM {
            compatible = "zmk,behavior-mod-morph";
            label = "NAV_BROWSER_NEWTAB_MM";
            bindings = <&kp HOME>, <&kp LC(T)>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U  |  Y  |  ;  |
            // |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E  |  I  |  O  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  .  |  ?  |  '  |
            //             | DEL | SFT | NUM |   | NAV | SPC | CTL |

            bindings = <
&kp Q        &kp W        &kp F           &kp P           &kp G  &kp J  &kp L            &kp U              &kp Y             &mt COLON SEMI
&mt LC(A) A  &kp R        &mt LEFT_ALT S  &mt LEFT_WIN T  &kp D  &kp H  &mt RIGHT_WIN N  &mt RIGHT_ALT E    &kp I             &kp O
&mt LC(Z) Z  &mt LC(X) X  &mt LC(C) C     &mt LC(V) V     &kp B  &kp K  &kp M            &mt EXCL QUESTION  &mt COMMA PERIOD  &mt DOUBLE_QUOTES SINGLE_QUOTE
                          &kp DEL         &kp LEFT_SHIFT  &mo 1  &mo 5  &kp SPACE        &kp RCTRL
            >;

            label = "Alpha";
        };

        lower_layer {
            display-name = "Num";

            // -----------------------------------------------------------------------------------------
            // |  ~  |  &  |  #  |  {  |  <  |   | CAL |  7  |  8  |  9  |  -  |
            // |  %  |  !  |  $  |  @  |  (  |   |  .  |  4  |  5  |  6  |  +  |
            // |  `  |  |  |  \  |  _  |  [  |   |  0  |  1  |  2  |  3  |  /  | 
            //             | DEL | SFT | NUM |   | NAV | SPC | CTL |

            bindings = <
&kp TILDE    &kp AMPS  &kp HASH       &mt RIGHT_BRACE LEFT_BRACE  &mt GT LT      &kp LS(LA(LC(C)))  &kp N7        &kp N8        &kp NUMBER_9  &kp MINUS
&kp PERCENT  &kp EXCL  &kp DOLLAR     &kp AT                      &mt RPAR LPAR  &kp PERIOD         &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&kp GRAVE    &kp PIPE  &kp BACKSLASH  &kp UNDERSCORE              &mt RBKT LBKT  &kp NUMBER_0       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH
                       &kp DEL        &kp LEFT_SHIFT              &trans         &trans             &kp SPACE     &kp RCTRL
            >;
        };

        raise_layer {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |
            // |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |
            // |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |
            //             | DEL | SFT | NUM |   | NAV | SPC | CTL |

            bindings = <
&none          &kp LS(LG(S))     &mt LG(LA(UP)) LG(UP_ARROW)  &mt LA(RIGHT) LA(LEFT)  &kp LC(LS(TAB))  &kp C_VOLUME_UP  &kp HOME          &kp UP                    &kp END            &kp PAGE_UP
&kp LG(LA(K))  &kp LG(LEFT)      &mt LG(DOWN) LG(LA(DOWN))    &kp LG(RIGHT)           &kp LC(TAB)      &kp C_VOL_DN     &kp LEFT          &kp DOWN                  &kp RIGHT          &kp PAGE_DOWN
&kp LS(LC(O))  &kp LS(LG(LEFT))  &mt LA(F4) LC(N)             &kp LG(LS(RIGHT))       &mt LC(W) LC(T)  &kp C_MUTE       &kp LG(LC(LEFT))  &mt LG(LC(F4)) LG(LC(D))  &kp LG(LC(RIGHT))  &bl BL_TOG
                                 &kp DEL                      &kp LSHFT               &trans           &trans           &kp SPACE         &kp RCTRL
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &bt BT_CLR  &bt BT_SEL 0  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &bt BT_SEL 1  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans
                &trans  &trans      &trans        &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans     &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &kp LS(LC(O))  &kp C_VOLUME_UP  &kp HOME  &kp UP_ARROW  &kp END    &kp PG_UP
&kp LG(D)  &trans        &trans            &trans              &kp LA(LG(K))  &kp C_VOL_DN     &kp LEFT  &kp DOWN      &kp RIGHT  &kp PG_DN
&trans     &trans        &trans            &trans              &kp LS(LG(S))  &kp C_MUTE       &trans    &trans        &trans     &trans
                         &trans            &trans              &trans         &trans           &trans    &trans
            >;
        };

        Nav_2.0 {
            bindings = <
&trans         &kp C_REWIND  &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &kp LS(LC(O))  &kp C_VOLUME_UP  &kp HOME  &behavior_mod_morph_up  &kp END    &kp PG_UP
&kp RIGHT_ALT  &kp RCTRL     &kp RIGHT_GUI     &kp RIGHT_SHIFT     &kp LA(LG(K))  &kp C_VOL_DN     &kp LEFT  &kp DOWN                &kp RIGHT  &kp PG_DN
&trans         &trans        &trans            &trans              &kp LS(LG(S))  &kp C_MUTE       &trans    &trans                  &trans     &trans
                             &trans            &trans              &trans         &trans           &trans    &trans
            >;
        };
    };
};
